
// _________ _______  _______ _________   _______  _______  _______  _______  _______
// \__   __/(  ____ \(  ____ \\__   __/  (  ____ \(  ___  )(  ____ \(  ____ \(  ____ \
//    ) (   | (    \/| (    \/   ) (     | (    \/| (   ) || (    \/| (    \/| (    \/
//    | |   | (__    | (_____    | |     | |      | (___) || (_____ | (__    | (_____
//    | |   |  __)   (_____  )   | |     | |      |  ___  |(_____  )|  __)   (_____  )
//    | |   | (            ) |   | |     | |      | (   ) |      ) || (            ) |
//    | |   | (____/\/\____) |   | |     | (____/\| )   ( |/\____) || (____/\/\____) |
//    )_(   (_______/\_______)   )_(     (_______/|/     \|\_______)(_______/\_______)


const {solution} = require('./index');

describe('H-Index 찾기  ', () => {

    test("[3, 0, 6, 1, 5] should be return 3",()=>{
        expect(solution([3,0,6,1,5])).toBe(3);
    });
    test("[0,0,0] should be return 0",()=>{
        expect(solution([0,0,0])).toBe(0);
    });
    test("[4,1] should be return 1",()=>{
        expect(solution([4,1])).toBe(1);
    });
});